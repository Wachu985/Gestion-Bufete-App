// Mocks generated by Mockito 5.3.2 from annotations
// in gestion_bufete_app/test/features/gestion_bufete/domain/usecases/delete_contrato_bufete_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:gestion_bufete_app/src/core/errors/failures.dart' as _i5;
import 'package:gestion_bufete_app/src/features/gestion_bufete/data/models/contrato_model.dart'
    as _i6;
import 'package:gestion_bufete_app/src/features/gestion_bufete/domain/entities/contrato.dart'
    as _i7;
import 'package:gestion_bufete_app/src/features/gestion_bufete/domain/repository/contrato_bufete_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ContratoBufeteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockContratoBufeteRepository extends _i1.Mock
    implements _i3.ContratoBufeteRepository {
  MockContratoBufeteRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> addContratoBufete(
          _i6.ContratoModel? contrato) =>
      (super.noSuchMethod(
        Invocation.method(
          #addContratoBufete,
          [contrato],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #addContratoBufete,
            [contrato],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> editContratoBufete(
    int? key,
    _i6.ContratoModel? contrato,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editContratoBufete,
          [
            key,
            contrato,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #editContratoBufete,
            [
              key,
              contrato,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> deleteContratoBufete(int? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteContratoBufete,
          [key],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #deleteContratoBufete,
            [key],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, double>> getSaldoMes(String? mes) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSaldoMes,
          [mes],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, double>>.value(
            _FakeEither_0<_i5.Failure, double>(
          this,
          Invocation.method(
            #getSaldoMes,
            [mes],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, double>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, Map<dynamic, _i7.Contrato>>>
      getAllContratosMes(String? mes) => (super.noSuchMethod(
            Invocation.method(
              #getAllContratosMes,
              [mes],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, Map<dynamic, _i7.Contrato>>>.value(
                _FakeEither_0<_i5.Failure, Map<dynamic, _i7.Contrato>>(
              this,
              Invocation.method(
                #getAllContratosMes,
                [mes],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, Map<dynamic, _i7.Contrato>>>);
}
